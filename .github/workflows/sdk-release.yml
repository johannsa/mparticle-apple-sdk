name: iOS SDK Release

on:
  workflow_dispatch:
    inputs:
      dryRun:
        description: Do a dry run to preview instead of a real release [true/false]
        required: true
        default: "true"

jobs:
  # SDK release is done from public main branch.
  confirm-public-repo-main-branch:
    name: "Confirm release is run from public/main branch"
    uses: mParticle/mparticle-workflows/.github/workflows/sdk-release-repo-branch-check.yml@stable

  create-release-branch:
    name: Create release branch
    runs-on: macOS-latest
    needs: confirm-public-repo-main-branch
    steps:
      - name: Checkout public development branch
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.MP_SEMANTIC_RELEASE_BOT }}
          ref: development

      - name: Create and push release branch to public repository
        run: |
          git checkout -b release/${{ github.run_number }}
          git push origin release/${{ github.run_number }}

  release:
    name: Perform release
    runs-on: macOS-latest
    needs: create-release-branch
    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.MP_SEMANTIC_RELEASE_BOT }}
      COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate environment and no-location patch
        run: |
          env | grep -q '^GITHUB_ACCESS_TOKEN=' || (echo "Required environment variable GITHUB_ACCESS_TOKEN is not set" && exit 1)
          env | grep -q '^COCOAPODS_TRUNK_TOKEN=' || (echo "Required environment variable COCOAPODS_TRUNK_TOKEN is not set" && exit 1)
          git apply Scripts/0001-DISABLE-LOCATION.patch || (echo "Disable location patch could not be successfully applied" && exit 1)
          git checkout .

      - name: Setup git config
        run: |
          git config user.email "developers@mparticle.com"
          git config user.name "mParticle Automation"

      - name: Checkout public main branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: ${{ github.repository }}
          token: ${{ secrets.MP_SEMANTIC_RELEASE_BOT }}
          ref: main

      - name: Merge public release branch into public main branch
        run: |
          git pull origin release/${{ github.run_number }}

      - name: Release --dry-run
        if: ${{ github.event.inputs.dryRun == 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.MP_SEMANTIC_RELEASE_BOT }}
          GIT_AUTHOR_NAME: mparticle-bot
          GIT_AUTHOR_EMAIL: developers@mparticle.com
          GIT_COMMITTER_NAME: mparticle-bot
          GIT_COMMITTER_EMAIL: developers@mparticle.com
        run: |
          npx \
          -p lodash \
          -p semantic-release@17 \
          -p @semantic-release/changelog@5 \
          -p @semantic-release/git@9 \
          -p @semantic-release/exec@5 \
          semantic-release --dry-run

      - name: Release
        if: ${{ github.event.inputs.dryRun == 'false'}}
        env:
          GITHUB_TOKEN: ${{ secrets.MP_SEMANTIC_RELEASE_BOT }}
          GIT_AUTHOR_NAME: mparticle-bot
          GIT_AUTHOR_EMAIL: developers@mparticle.com
          GIT_COMMITTER_NAME: mparticle-bot
          GIT_COMMITTER_EMAIL: developers@mparticle.com
        run: |
          npx \
          -p lodash \
          -p semantic-release@17 \
          -p @semantic-release/changelog@5 \
          -p @semantic-release/git@9 \
          -p @semantic-release/exec@5 \
          semantic-release

      - name: Push automated release commits to public release branch
        if: ${{ github.event.inputs.dryRun == 'false' }}
        run: |
          ls 
          git status
          git push origin HEAD:release/${{ github.run_number }}

      - name: Release to CocoaPods
        if: ${{ github.event.inputs.dryRun == 'false'}}
        run: |
          sudo gem install xcodeproj
          pod trunk push --allow-warnings

  sync-repository:
    name: Finalize release and sync internal and public repositories
    needs: release
    runs-on: macOS-latest
    steps:
      - name: Checkout public main branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: ${{ github.repository }}
          token: ${{ secrets.MP_SEMANTIC_RELEASE_BOT }}
          ref: main

      - name: Merge public release branch into public main branch
        if: ${{ github.event.inputs.dryRun == 'false' }}
        run: |
          git pull origin release/${{ github.run_number }}

      - name: Push release commits to public main and development branches
        if: ${{ github.event.inputs.dryRun == 'false'}}
        run: |
          git push origin HEAD:main
          git push origin HEAD:development

      - name: Push release commits to internal main and development branches
        if: ${{ github.event.inputs.dryRun == 'false' }}
        run: |
          git remote add internal https://${{ secrets.MP_SEMANTIC_RELEASE_BOT }}@github.com/mParticle/mparticle-apple-sdk-internal.git
          git push internal HEAD:main
          git push internal HEAD:development

      - name: Delete public release branch
        if: ${{ github.event.inputs.dryRun == 'false' }}
        run: |
          git push --delete origin release/${{ github.run_number }}
